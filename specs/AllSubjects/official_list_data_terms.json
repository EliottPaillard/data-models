{"$schema": "http://json-schema.org/schema#", "$id": "https://raw.githubusercontent.com/smart-data-models/data-models/master/terms.jsonld", "title": "Terms included into the Smart Data Models", "definitions": {"activityType": "The action performed (e.g. Drive).", "alternateName": "An alias for the item.", "dataProvider": "Specifies the URL to information about the provider of this information.", "dateActivityEnded": "Activity"s end timestamp.", "dateActivityStarted": "Activity"s start timestamp.", "description": "A description of the item\n", "name": "The name of the item\n", "owner": "The owner of the item.", "refAgent": "Reference to the agent (i.e. a person) performing the activity. It may be another NGSI Entity or any Agent identified by an URI.", "refObject": "Reference to the object of the action (e.g. Car1). It may be another NGSI Entity or any Object identified by an URI.", "refTarget": "Reference to the target of the action (e.g. Office1).", "source": "A sequence of characters giving the source of the entity data", "address": "The mailing address.\n", "areaServed": "", "location": "The current location of the item\n", "refActivity": "An object representing the current activity performed by the User", "refUserDevice": "An object representing the current device used by the User.", "refUser": "reference to the (anonymised) User to which this UserContext is associated.", "applicationUrl": "This field specifies the real URL containing the solution or application", "availability": "Specifies the functionality intervals in which the announcements will be\nsent\n", "category": "Defines the type of interaction", "refRelatedEntity": "List of entities improved with this Smart Point of Interaction. The\nentity type could be any such as a “Parking”, “Point of Interest”, etc\n", "refSmartSpot": "Reference to one or more entity of type SmartSpot", "announcedUrl": "URL broadcasted by the device", "announcementPeriod": "Period between announcements in milliseconds", "bluetoothChannel": "Bluetooth channels where to transmit the announcement", "coverageRadius": "Radius of the spot coverage area in meters", "signalStrength": "Signal strength to adjust the announcement range", "aggregatedData": "", "area": "", "businessTarget": "", "calculationFrequency": "", "calculationPeriod": "", "calculatedBy": "", "calculationMethod": "", "calculationFormula": "", "currentStanding": "", "dateExpires": "", "dateNextCalculation": "", "effectiveSince": "", "kpiValue": "", "organization": "", "process": "", "product": "", "provider": "", "hasStop": "Stop to which this estimation applies to.", "hasTrip": "The trip to which this estimation applies to.", "headsign": "It shall contain the text that appears on a sign that identifies the trip s destination to passengers.", "remainingDistance": "It shall contain the remaining distance (in meters) of arrival for the trip heading to the concerned stop.", "remainingTime": "It shall contain the remaining time of arrival for the trip heading to the concerned stop.", "code": "", "hasParentStation": "", "page": "", "wheelChairAccessible": "", "zoneCode": "", "language": "Same as GTFS agency_language.", "phone": "Same as GFTS agency_phone.", "timezone": "Same as GTFS agency_timezone.", "appliesOn": "Date (in YYYY-MM-DD format) this rule applies to. It shall be obtained from the GTFS date field", "exceptionType": "Same as GTFS exception_type field. Allowed values: ("1", "2")", "hasService": "Service to which this rule applies to. Derived from service_id.", "endDate": "End date of this rule in `YYYY-MM-DD` format. It can be obtained\nfrom the field `end_date` of\n[calendar.txt](https://developers.google.com/transit/gtfs/reference/#calendartxt)\n", "friday": "Same as GTFS friday", "monday": "Same as GTFS monday", "saturday": "Same as GTFS saturday", "startDate": "Start date of this rule in YYYY-MM-DD format. It can be obtained from the field start_date of calendar.txt.", "sunday": "Same as GTFS sunday", "thursday": "Same as GTFS thursday", "tuesday": "Same as GTFS tuesday", "wednesday": "Same as GTFS wednesday", "endTime": " Same as GTFS end_time. See format.", "exactTimes": "Same as GTFS exact_times but encoded as a Boolean: false: Frequency-based trips are not exactly scheduled. true: Frequency-based trips are exactly scheduled.", "headwaySeconds": "Same as GTFS headway_secs.", "startTime": "Same as GTFS start_time. See format.", "operatedBy": "Agency that operates this route.", "hasAccessPoint": "It shall point to another Entity(ies) of type GtfsAccessPoint", "arrivalTime": "Same as GTFS arrival_time", "departureTime": "Same as GTFS departure_time", "distanceTravelled": "Same as GTFS shape_dist_traveled.", "dropOffType": "", "pickupType": " Same as GTFS pickup_type.", "stopHeadsign": "Same as GTFS stop_headsign", "stopSequence": "Same as GTFS stop_sequence", "timepoint": "Same as GTFS timepoint.", "hasDestination": "Trip associated to this Entity.", "hasOrigin": "Trip associated to this Entity.", "minimumTransferTime": "Same as GTFS min_transfer_time.", "transferType": "Same as GTFS transfer_type.", "block": "Same as GTFS block_id.", "direction": "Same as GTFS direction_id.", "hasRoute": "Same as route_id.", "hasShape": "Same as GTFS shape_id.", "headSign": "Same as GTFS trip_headsign.", "shortName": "Same as GTFS trip_short_name.", "routeCode": "", "routeColor": "", "routeSegments": "", "routeTextColor": "", "schedule": "", "shortRouteCode": "", "transportationType": "", "openingHoursSpecification": "", "peopleCount": "", "refPeopleCountDevice": "", "refPublicTransportRoute": "", "shortStopCode": "", "stopCode": "", "wheelchairAccessible": ""}}