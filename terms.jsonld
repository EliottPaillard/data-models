{"$schema": "http://json-schema.org/schema#", 
"$id": "https://raw.githubusercontent.com/smart-data-models/data-models/master/terms.jsonld", 
"title": "Terms included into the Smart Data Models", 
"definitions": {"activityType": "The action performed (e.g. Drive).", 
"alternateName": "An alias for the item.", 
"dataProvider": "Specifies the URL to information about the provider of this information.", 
"dateActivityEnded": "Activitys end timestamp.", 
"dateActivityStarted": "Activitys start timestamp.", 
"description": "A description of the item", 
"name": "The name of the item\n", 
"owner": "The owner of the item.", 
"refAgent": "Reference to the agent (i.e. a person) performing the activity. It may be another NGSI Entity or any Agent identified by an URI.", 
"refObject": "Reference to the object of the action (e.g. Car1). It may be another NGSI Entity or any Object identified by an URI.", 
"refTarget": "Reference to the target of the action (e.g. Office1).", 
"source": "A sequence of characters giving the source of the entity data", 
"dateCreated": "Creation timestamp of the entity.", 
"dateModified": "Update timestamp of this entity.", 
"id": "URN holding the id of the attribute", 
"type": "The entity type\n", 
"address": "The mailing address.\n", 
"areaServed": "The geographic area where a service or offered item is provided.", 
"location": "The current location of the itemr", 
"refActivity": "An object representing the current activity performed by the User", 
"refUserDevice": "An object representing the current device used by the User.", 
"refUser": "reference to the (anonymised) User to which this UserContext is associated.", 
"applicationUrl": "This field specifies the real URL containing the solution or application", 
"availability": "Specifies the functionality intervals in which the announcements will be\nsent\n", 
"category": "\n- `traffic`\n- `naturalDisaster`\n- `weather`\n- `environment`\n- `health`\n- `security`\n- `agriculture`\n", 
"refRelatedEntity": "List of entities improved with this Smart Point of Interaction. The\nentity type could be any such as a “Parking”, “Point of Interest”, etc\n", 
"refSmartSpot": "Reference to one or more entity of type SmartSpot", 
"announcedUrl": "URL broadcasted by the device", 
"announcementPeriod": "Period between announcements in milliseconds", 
"bluetoothChannel": "Bluetooth channels where to transmit the announcement", 
"coverageRadius": "Radius of the spot coverage area in meters", 
"signalStrength": "Signal strength to adjust the announcement range", 
"aggregatedData": "", 
"area": "", 
"businessTarget": "", 
"calculationFrequency": "", 
"calculationPeriod": "", 
"calculatedBy": "", 
"calculationMethod": "", 
"calculationFormula": "", 
"currentStanding": "", 
"dateExpires": "", 
"dateNextCalculation": "", 
"effectiveSince": "", 
"kpiValue": "", 
"organization": "", 
"process": "", 
"product": "", 
"provider": "", 
"hasStop": "Stop to which this estimation applies to.", 
"hasTrip": "The trip to which this estimation applies to.", 
"headsign": "It shall contain the text that appears on a sign that identifies the trip s destination to passengers.", 
"remainingDistance": "It shall contain the remaining distance (in meters) of arrival for the trip heading to the concerned stop.", 
"remainingTime": "It shall contain the remaining time of arrival for the trip heading to the concerned stop.", 
"code": "", 
"hasParentStation": "", 
"page": "", 
"wheelChairAccessible": "", 
"zoneCode": "", 
"language": "Same as GTFS agency_language.", 
"phone": "Same as GFTS agency_phone.", 
"timezone": "Same as GTFS agency_timezone.", 
"appliesOn": "Date (in YYYY-MM-DD format) this rule applies to. It shall be obtained from the GTFS date field", 
"exceptionType": "Same as GTFS exception_type field. Allowed values: ("1", 
"2")", 
"hasService": "Service to which this rule applies to. Derived from service_id.", 
"endDate": "End date of this rule in `YYYY-MM-DD` format. It can be obtained\nfrom the field `end_date` of\n[calendar.txt](https://developers.google.com/transit/gtfs/reference/#calendartxt)\n", 
"friday": "Same as GTFS friday", 
"monday": "Same as GTFS monday", 
"saturday": "Same as GTFS saturday", 
"startDate": "Start date of this rule in YYYY-MM-DD format. It can be obtained from the field start_date of calendar.txt.", 
"sunday": "Same as GTFS sunday", 
"thursday": "Same as GTFS thursday", 
"tuesday": "Same as GTFS tuesday", 
"wednesday": "Same as GTFS wednesday", 
"endTime": " Same as GTFS end_time. See format.", 
"exactTimes": "Same as GTFS exact_times but encoded as a Boolean: false: Frequency-based trips are not exactly scheduled. true: Frequency-based trips are exactly scheduled.", 
"headwaySeconds": "Same as GTFS headway_secs.", 
"startTime": "Same as GTFS start_time. See format.", 
"operatedBy": "Agency that operates this route.", 
"hasAccessPoint": "It shall point to another Entity(ies) of type GtfsAccessPoint", 
"arrivalTime": "Same as GTFS arrival_time", 
"departureTime": "Same as GTFS departure_time", 
"distanceTravelled": "Same as GTFS shape_dist_traveled.", 
"dropOffType": "", 
"pickupType": " Same as GTFS pickup_type.", 
"stopHeadsign": "Same as GTFS stop_headsign", 
"stopSequence": "Same as GTFS stop_sequence", 
"timepoint": "Same as GTFS timepoint.", 
"hasDestination": "Trip associated to this Entity.", 
"hasOrigin": "Trip associated to this Entity.", 
"minimumTransferTime": "Same as GTFS min_transfer_time.", 
"transferType": "Same as GTFS transfer_type.", 
"block": "Same as GTFS block_id.", 
"direction": "Same as GTFS direction_id.", 
"hasRoute": "Same as route_id.", 
"hasShape": "Same as GTFS shape_id.", 
"headSign": "Same as GTFS trip_headsign.", 
"shortName": "Same as GTFS trip_short_name.", 
"routeCode": "", 
"routeColor": "", 
"routeSegments": "", 
"routeTextColor": "", 
"schedule": "", 
"shortRouteCode": "", 
"transportationType": "", 
"openingHoursSpecification": "", 
"peopleCount": "", 
"refPeopleCountDevice": "", 
"refPublicTransportRoute": "", 
"shortStopCode": "", 
"stopCode": "", 
"wheelchairAccessible": "", 
"annotations": "A field reserved for annotations (incidences, remarks, etc.).", 
"color": "The color of the product.", 
"dateLastWatering": "", 
"image": "The image of the product.", 
"nextWateringDeadline": "Deadline for next watering operation.", 
"openingHours": "The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas , separating each day. ", 
"refRecord": "List of records which contain measurements related to this flower bed.", 
"style": "", 
"dateObserved": "The date and time of this observation in ISO8601 UTCformat.", 
"soilMoistureEc": " The observed soild moisture measured as Electrical Conductivity, EC in units of Siemens per meter (S/m).", 
"soilMoistureVwc": "The observed soil moisture measured as Volumetric Water Content, VWC (percentage, expressed in parts per one).", 
"soilTemperature": "The observed soil temperature in Celsius degrees.", 
"endpoint": "", 
"relatedSource": "List of IDs the current entity may have in external applications", 
"version": "", 
"agroVocConcept": "", 
"harvestingInterval": "A list of the recommended harvesting interval date(s) for this crop. Specified using ISO8601 repeating date intervals:\n\n*interval, description*\n\nWhere interval is in the form of start date/end date\n\n`--MM-DD/--MM-DD`\n\nMeaning repeat each year from this start date to this end date.\n", 
"hasAgriFertiliser": "Reference to the recommended types of fertiliser suitable for growing this crop.", 
"hasAgriPest": "Reference to the pests known to attack this crop.", 
"hasAgriSoil": "Reference to the recommended types of soil suitable for growing this crop.", 
"plantingFrom": "A list of the recommended planting interval date(s) for this crop. Specified using ISO8601 repeating date intervals:\n\n*interval, description*\n\nWhere interval is in the form of start date/end date\n\n`--MM-DD/--MM-DD`\n\nMeaning repeat each year from this start date to this end date.\n", 
"wateringFrequency": "A description of the recommended watering schedule. A choice from an enumerated list. One of: *daily, weekly, biweekly, monthly, onDemand, other*\n", 
"contactPoint": "A contact point for a person or organization.", 
"hasAgriParcel": "List of agri parcels belonging to the farm", 
"hasBuilding": "List of buildings belonging to the farm", 
"co2": "The measured interior C02 concentration nominally in mg/L.", 
"dailyLight": "Daily Accumulated light measured in kW per square metre", 
"drainFlow": "The observed drain flow rate in litres per second", 
"hasAgriParcelChildren": "Related sub AgriParcel records to which this entity relates.", 
"hasDevice": "Reference to the IoT devices associated with this greenhouse i.e. sensors, controls.", 
"hasWaterQualityObserved": "Reference to one or more water quality observation records current for this entity.", 
"leafTemperature": "The average greenhouse air temperature nominally in degrees centigrade.", 
"relativeHumidity": "The inside relative humidity expressed as a number between 0 and 1 representing the range 0% to 100 (%).\n\n0 ≤ relativeHumidity ≤ 1\n", 
"cropStatus": "A choice from an enumerated list describing the crop planting status One of: seeded, justBorn, growing, maturing, readyForHarvesting.", 
"hasDevices": "\tReference to the IoT devices associated with this parcel i.e. sensors, controls.\t", 
"lastPlantedAt": "Indicates the date when the crop was last planted.", 
"endedAt": "Timestamp when the operation actually finished.", 
"irrigationRecord": "", 
"operationType": "A choice from an enumerated list describing the operation performed on the parcel. One of: fertiliser, inspection, pesticide, water, other.", 
"plannedEndAt": "The planned end date/timestamp for the operation.Note that this is advisory and the actual time the operation finishes may be before or after the planned end.", 
"plannedStartAt": "\tThe planned start date/timestamp for the operation.Note that this is advisory and the actual time the operation starts may be before or after the planned start.", 
"quantity": "The total quantity of water or product used/ applied. It is recommended this is measured in litres for liquids or kilogrammes for solids.", 
"reportedAt": "Timestamp when the event/ fault was reported.", 
"result": "A description of the results of the operation. One of: ok, aborted, failed.", 
"startedAt": "Timestamp when the operation actually started to be performed.", 
"status": "A choice from an enumerated list describing the status. One of: planned, ongoing, finished, scheduled, cancelled.", 
"waterSource": "A sequence of characters giving the source of the entity data", 
"workOrder": "", 
"workRecord": "", 
"atmosphericPressure": "Atmospheric Pressure nominally in units of hecto Pascals.", 
"depth": "Metadata to indicate the associated depth where soil measurements are\ntaken\n", 
"leafRelativeHumidity": "", 
"leafWetness": "", 
"observedAt": "Indicates the date/time the record was observed/ last observed.", 
"soilMoistureEC": "\tMeasured as Electrical Conductivity, EC nominally in units of Siemens per meter (S/m).", 
"soilSalinity": "", 
"solarRadiaton": "", 
"hasAgriProductType": "Reference to the recommended types of product that can be used to treat this pest.", 
"hasAgriProductTypeChildren": "Reference to child product types i.e. immediately below this entity in the hierarchy.", 
"root": "A logical indicator that this product is the root of an AgriProductType hierarchy. Logical true indicates it is the root.", 
"curveType": "", 
"tag": "", 
"xData": "", 
"yData": "", 
"demandeCategory": "", 
"elevation": "", 
"emitterCoefficient": "", 
"initialQuality": "", 
"sourceCategory": "", 
"multipliers": "Multipliers define how some base quantity (e.g., demand) is adjusted for each time period\n", 
"timeStep": "The time step used for the multipliers.\n", 
"bulkCoeff": "The bulk reaction coefficient for the pipe. Use a positive value for growth and a negative value for decay\n", 
"createdAt": "Entitys creation timestamp.\n", 
"diameter": "The pipe diameter\n", 
"endsAt": "The ID of the node where the pipe ends.\nReference to an entity of type `Node (Reservoir, Junction, Tank)`\n", 
"initialStatus": "Determines whether the pipe is initially open, closed, or contains a check valve.\nValues are restricted to: "OPEN","CLOSED","CV"\n", 
"length": "The actual length of the pipe\n", 
"minorLoss": "Unitless minor loss coefficient associated with bends, fittings, etc.\n", 
"modifiedAt": "", 
"roughness": "he roughness coefficient of the pipe. It is unitless for Hazen-Williams or Chezy-Manning roughness and has \nunits of millifeet (mm) for Darcy-Weisbach roughness.\nAll units are accepted in [CEFACT](https://www.unece.org/cefact.html) code\n", 
"startsAt": "The ID of the node where the pipe begins.\nReference to an entity of type `Node (Reservoir, Junction, Tank)`\n", 
"wallCoeff": "The wall reaction coefficient for the pipe. Use a positive value for growth and a negative value for decay.\n", 
"efficCurve": "The ID label of the curve that represents the pumps wire-to-water efficiency as a function of flow rate\n", 
"energyPattern": "The ID label of the time pattern used to describe the variation in energy price throughout the day\n", 
"energyPrice": "The average or nominal price of energy in monetary units per kw-hr.\nAll units are accepted in [CEFACT](https://www.unece.org/cefact.html) code\n", 
"headCurve": "The ID label of the pump curve used to describe the relationship between the head delivered by \nthe pump and the flow through the pump\n", 
"power": "The power supplied by the pump.\nAll units are accepted in [CEFACT](https://www.unece.org/cefact.html) code\n", 
"pumpPattern": "The ID label of a time pattern used to control the pumps operation. The multipliers of the pattern are equivalent to speed settings. A multiplier of zero implies that the pump will be \nshut off during the corresponding time period\n", 
"speed": "The relative speed setting of the pump.\n", 
"demandCategory": "", 
"headPattern": "", 
"reservoirHead": "", 
"baseDemand": "", 
"bulkReactionCoefficient": "", 
"initLevel": "", 
"maxLevel": "", 
"minLevel": "", 
"minVolume": "", 
"mixingFraction": "", 
"mixingModel": "", 
"nominalDiameter": "", 
"volumeCurve": "", 
"setting": "A parameter that describes the valves operational setting.\nAll units are accepted in [CEFACT](https://www.unece.org/cefact.html) code\n", 
"valveType": "The valve type. Values are resrtricted to: "PRV", 
"PSV","PBV","FCV","TCV" and"GPV"", 
"acceptedPaymentMethod": "Accepted payment method(s).", 
"aggregateRating": "Aggregated rating for this parking site.", 
"allowedVehicleType": "Vehicle type(s) allowed. The first element of this array MUST be the principal vehicle type allowed. Free spot numbers of other allowed vehicle types might be reported under the attribute extraSpotNumber and through specific entities of type ParkingGroup.", 
"availableSpotNumber": "The number of spots available (including all vehicle types or reserved spaces, such as those for disabled people, long term parkers and so on). This might be harder to estimate at those parking locations on which spots borders are not clearly marked by lines.", 
"averageSpotLength": "The average length of parking spots.", 
"averageSpotWidth": "The average width of parking spots.", 
"chargeType": "Type(s) of charge performed by the parking site.", 
"extCategory": "", 
"extraSpotNumber": "The number of extra spots available, i.e. free. This value must aggregate free spots from all groups mentioned below: \nA/ Those reserved for special purposes and usually require a permit. Permit details will be found at parking group level (entity of type ParkingGroup).\nB/ Those reserved for other vehicle types different than the principal allowed vehicle type. \nC/ Any other group of parking spots not subject to the general condition rules conveyed by this entity.\n", 
"facilities": "provided by this parking site.", 
"firstAvailableFloor": "Number of the floor closest to the ground which currently has available parking spots.", 
"highestFloor": "For parking sites with multiple floor levels, highest floor.", 
"layout": "Parking layout. Gives more details to the category attribute.", 
"lowestFloor": "For parking sites with multiple floor levels, lowest floor.", 
"maximumAllowedHeight": "Maximum allowed height for vehicles. If there are multiple zones, it will be the minimum height of all the zones.", 
"maximumAllowedWidth": "Maximum allowed width for vehicles. If there are multiple zones, it will be the minimum width of all the zones.", 
"maximumParkingDuration": "Maximum allowed stay at site, on a general basis, encoded as a ISO8601 duration or with any other string relevant for parking. An empty value or when non present indicates an indefinite duration.", 
"measuresPeriod": "", 
"measuresPeriodUnit": "The measures period unit related to availableSpotNumber and priceRatePerMinute.", 
"occupancyDetectionType": "Occupancy detection method(s).", 
"parkingMode": "Parking mode(s).", 
"priceCurrency": "", 
"priceRatePerMinute": "", 
"requiredPermit": "", 
"reservationType": "Conditions for reservation.", 
"security": "aspects provided by this parking site.", 
"specialLocation": " If the parking site is at a special location (airport, depatment store, etc.) it conveys what is such special location.", 
"totalSpotNumber": "The total number of spots offered by this parking site. This number can be difficult to be obtained for those parking locations on which spots are not clearly marked by lines.", 
"usageScenario": "Usage scenario(s). Gives more details to the category attribute.", 
"TimeInstant": "", 
"refDevice": "The device representing the physical sensor used to monitor this parking spot.", 
"width": "Width of the parking spot.", 
"subCategory": "Any of the elements in the subcategory of events Weather Alerts", 
"alertSource": "Reference to the source of the Alert. For example, it could be a user of an application, a device, or a service.", 
"dateIssued": "The date and time the Alert was issued by the Alert generator in ISO8601 UTC format.", 
"validFrom": "The start date of validity of the Alert in ISO8601 UTC format.", 
"validTo": "The end date of validity of the Alert in ISO8601 UTC format.", 
"severity": "define the level of gravity of a given alert.\n\n  - `informational`\n  - `low`\n  - `medium`\n  - `high`\n  - `critical`\n", 
"data": "used to carry additional data for the Alert", 
"dateRetrieved": "The date and time the forecast was retrieved in ISO8601 UTC format.", 
"dayMaximum": "Maximum values for the reported period.", 
"dayMinimum": "Minimum values forecasted for the reported period", 
"precipitationProbability": "The probability of precipitation, expressed as a number between 0 ≤ precipitationProbability ≤ 1.", 
"uVIndexMax": "The maximum UV index for the period, based on the World Health Organizations UV Index measure.", 
"validity": "Includes the validity period for this forecast as a ISO8601\ntime interval. As a workaround for the lack of support of Orion Context\nBroker for datetime intervals, it can be used two separate attributes\n", 
"refPointOfInterest": "A reference to a point of interest associated to this forecast.", 
"visibility": "- `veryPoor`\n- `poor`\n- `moderate`\n- `good`\n- `veryGood`\n- `excellent`\n", 
"weatherType": "- `clearNight`\n- `cloudy`\n- `drizzle`\n- `fog`\n- `hail`\n- `hailShower`\n- `heavyRain`\n- `heavyRainShower`\n- `heavySnowShower`\n- `heavySnow`\n- `highClouds`\n- `lightRain`\n- `lightRainShower`\n- `lightSnow`\n- `mist`\n- `overcast`\n- `partlyCloudy`\n- `sleet`\n- `sleetShower`\n- `slightlyCloudy`\n- `shower`\n- `snow`\n- `sunnyDay`\n- `thunderShower`\n- `thunder`\n- `veryCloudy`\n", 
"windDirection": "Wind direction forecasted", 
"windSpeed": "Wind speed forecasted.", 
"dewPoint": "The dew point encoded as a number. Celsius degrees.", 
"illuminance": "(https://en.wikipedia.org/wiki/Illuminance) observed measured in lux (lx) or lumens per square metre (cd·sr·m−2)", 
"precipitation": "Airs temperature observed. Liters per square meter.", 
"pressureTendency": "Is the pressure rising or falling? It can be expressed in quantitative terms or qualitative terms.\n\n- `falling`\n- `raising`\n- `steady`\n", 
"snowHeight": "The snow height observed by generic snow depth measurement sensors, expressed in centimeters", 
"solarRadiation": "The solar radiation observed measured in Watts per square meter.", 
"streamGauge": "The water level surface elevation observed by Hydrometric\nmeasurement sensors, namely a [Stream Gauge](https://en.wikipedia.org/wiki/Stream_gauge),\nexpressed in centimeters.\n", 
"actuationHours": "Hours suitable for performing actuations over the container.", 
"cargoWeight": "Weight of the container load.", 
"dateLastCleaning": " When the container was cleaned last time.", 
"dateLastEmptying": "Timestamp which represents when the container was emptied last time.", 
"dateServiceStarted": "Date at which the container started giving service.", 
"fillingLevel": "Filling level of the container (percentage, expressed in parts per one). When the container is full it must be equal to 1.0.\nWhen the container is empty it must be equal to 0.0.\n", 
"isleId": "Identifier (or name) of the isle where the container is placed.\nThis attribute should be used when entities of type WasteContainerIsle are not being modelled specifically.\nOtherwise, refWasteContainerIsle should be used.\n", 
"methaneConcentration": "Methane (CH4) concentration inside the container.", 
"nextActuationDeadline": "Deadline for next actuation to be performed (emptying, picking up, etc.).", 
"nextCleaningDeadline": "Deadline for next cleaning.", 
"regulation": "Regulation under which the container is operating.", 
"responsible": "Responsible for the container, i.e. entity in charge of actuating (emptying, collecting etc.).", 
"serialNumber": "Serial number of the container.", 
"storedWasteCode": "As per the regulation, waste codes which precisely identifies waste origin and kind.", 
"storedWasteKind": "Kind/s of waste stored by the container.", 
"storedWasteOrigin": "Origin of the waste stored.", 
"temperature": "Temperature inside the container.", 
"features": "A list of features provided by the isle.", 
"insertHolesNumber": "Number of insert holes the isle has.", 
"refWasteContainer": "List of containers present in the isle.", 
"brandName": "Name of the brand.", 
"cargoVolume": "Total volume the container can hold.", 
"compliantWith": " A list of standards to which the container is compliant with (ex. UNE-EN 840-2:2013)", 
"height": "Height of the container.", 
"madeOf": "Material the container is made of.", 
"madeOfCode": "Material Code as per standard tables. TBD.", 
"manufacturerName": "Name of the manufacturer.", 
"maximumLoad": "Maximum load the container can hold safely.", 
"modelName": "Name of the model as given by the manufacturer. This attribute is different than name which is just a codename usually given by municipalities.", 
"recommendedLoad": "Manufacturer recommended load for the container.", 
"weight": "Weight of the container.", 
"availableBikeNumber": "The number of bikes available in the bike hire docking station to be hired by users.", 
"freeSlotNumber": "The number of slots available for returning and parking bikes. It must lower or equal than totalSlotNumber.", 
"outOfServiceSlotNumber": "The number of slots that are out of order and cannot be used to hire or park a bike. It must lower or equal than totalSlotNumber.", 
"totalSlotNumber": "The total number of slots offered by this bike docking station.", 
"averageCrowdSpeed": "Average speed of the crowd transiting during the observation period.", 
"averageHeadwayTime": "Average headway time. Headway time is the time elapsed between two consecutive persons.", 
"congested": "Flags whether there was a crowd congestion during the observation period in the referred walkway. The absence of this attribute means no crowd congestion.", 
"dateObservedFrom": " Observation period start date and time. See dateObserved.", 
"dateObservedTo": " Observation period end date and time. See dateObserved.", 
"occupancy": " Fraction of the observation time where a person has been occupying the observed walkway.", 
"refRoadSegment": " Concerned road segment on which the observation has been mede.", 
"amperage": "The total amperage offered by the charging station.", 
"availableCapacity": "The number of vehicles which currently can be charged.", 
"capacity": "The total number of vehicles which can be charged at the same time. The total number of sockets can be higher.", 
"socketNumber": "The total number of sockets offered by this charging station.", 
"socketType": "The type of sockets offered by this station.", 
"voltage": "The total voltage offered by the charging station.", 
"endKilometer": "The kilometer number (measured from the start point of the road) where this road segment ends.", 
"laneUsage": "This attribute can be used to convey specific parameters describing each lane.", 
"maximumAllowedSpeed": "Maximum allowed speed while transiting this road segment. More restrictive limits might be applied to specific vehicle types (trucks, caravans, etc.).", 
"maximumAllowedWeight": " Maximum allowed weight for vehicles transiting this road segment.", 
"minimumAllowedSpeed": " Minimum allowed speed while transiting this road segment.", 
"startKilometer": " The kilometer number (measured from the start point of the road) where this road segmnent starts.", 
"totalLaneNumber": "Total number of lanes offered by this road segment.", 
"averageGapDistance": " Average gap distance between consecutive vehicles.", 
"averageVehicleLength": "Average length of the vehicles transiting during the observation period", 
"averageVehicleSpeed": "Average speed of the vehicles transiting during the observation period.", 
"intensity": " Total number of vehicles detected during this observation period.", 
"laneDirection": "Usual direction of travel in the lane referred by this observation. \nThis attribute is useful when the observation is not referencing any road segment, \nallowing to know the direction of travel of the traffic flow observed.\n", 
"laneId": "Lane identifier.", 
"reversedLane": " Flags whether traffic in the lane was reversed during the observation period. The absence of this attribute means no lane reversion.", 
"vehicleSubType": "allows to specify a sub type of vehicleType , eg if the vehicleType is set to Lorry the vehicleSubType may be OGV1 or OGV2 to convey more information about the exact type of vehicle", 
"vehicleType": "Type of vehicle from the point of view of its structural characteristics.", 
"dateFirstUsed": "Timestamp which denotes when the vehicle was first used.", 
"dateVehicleFirstRegistered": "The date of the first registration of the vehicle with the respective public authorities.", 
"feature": "Feature(s) incorporated by the vehicle.", 
"fleetVehicleId": " The identifier of the vehicle in the context of the fleet of vehicles to which it belongs.", 
"mileageFromOdometer": "", 
"purchaseDate": " The date the item e.g. vehicle was purchased by the current owner.", 
"serviceProvided": " Service(s) the vehicle is capable of providing or it is assigned to.", 
"serviceStatus": " Vehicle status (from the point of view of the service provided, so it could not apply to private vehicles)", 
"vehicleConfiguration": "A short text indicating the configuration of the vehicle, e.g. "5dr hatchback ST 2.5 MT 225 hp" or "limited edition".", 
"vehicleIdentificationNumber": "The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.", 
"vehiclePlateIdentifier": " An identifier or code displayed on a vehicle registration plate attached to the vehicle used for official identification purposes. The registration identifier is numeric or alphanumeric and is unique within the issuing authority region.", 
"vehicleSpecialUsage": "Indicates whether the vehicle is been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.", 
"fuelConsumption": "The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).", 
"fuelType": " The type of fuel suitable for the engine or engines of the vehicle.", 
"url": "Specifies the URL to information about the provider of this information", 
"vehicleEngine": " Information about the engine or engines of the vehicle.", 
"vehicleModelDate": "The release date of a vehicle model (often used to differentiate versions of the same make and model).", 
"accessType": "Describes how to get to this beach", 
"beachType": "Type of beach according to different criteria.", 
"occupationRate": " Typical occupation rate of this beach.", 
"refSeeAlso": "Additional information for the item.", 
"artPeriod": "Corresponds to the art period(s) of the exhibitions made by this museum.", 
"buildingType": "Type of building that hosts the museum.", 
"featuredArtist": "Main featured artist(s) at this museum.", 
"historicalPeriod": "", 
"museumType": "Type of museum according to the exhibited content.", 
"touristArea": "Tourist area at which this museum is located. Precise semantics might depend on the application or target country or region. For instance Costa del Sol.", 
"currenciesAccepted": "Currencies accepted in this store. It uses ISO 4217 currency format (e.g. USD, EUR) ", 
"email": "The email address of this store.", 
"logo": "An associated logo for this store.", 
"paymentAccepted": " Payment method accepted in this store.", 
"telephone": "The telephone number of this store.", 
"batteryLevel": "Device battery level. It must be equal to `1.0` when battery is full. `0.0` when battery ìs empty.\n`-1` when transiently cannot be determined.\n", 
"configuration": "Device technical configuration. This attribute is intended to be a dictionary of properties which capture parameters\nwhich have to do with the configuration of a device (timeouts, reporting periods, etc.) and which are not currently \ncovered by the standard attributes defined by this model.\n", 
"controlledAsset": "The asset(s) (building, object, etc.) controlled by the device.", 
"controlledProperty": "See attribute `controlledProperty` from [DeviceModel](../../DeviceModel/doc/spec.md). Optional but recommended to optimize queries.", 
"dateInstalled": "A timestamp which denotes when the device was installed (if it requires installation).", 
"dateLastCalibration": "A timestamp which denotes when the last calibration of the device happened.", 
"dateLastValueReported": "A timestamp which denotes the last time when the device successfully reported data to the cloud.", 
"dateManufactured": "A timestamp which denotes when the device was manufactured.", 
"deviceState": "State of this device from an operational point of view. Its value can be vendor dependent.", 
"firmwareVersion": "The firmware version of this device.", 
"hardwareVersion": "The hardware version of this device.", 
"ipAddress": "The IP address of the device. It can be a comma separated list of values if the device has more than one IP address.", 
"macAddress": "he MAC address of the device.", 
"mcc": "Mobile Country Code - This property identifies univoquely the country of the mobile network the device is attached to.", 
"mnc": "This property identifies the Mobile Network Code (MNC) of the network the device is attached to. The MNC is used in combination with a \nMobile Country Code (MCC) (also known as a "MCC / MNC tuple") to uniquely identify a mobile phone operator/carrier using the GSM, CDMA, \niDEN, TETRA and 3G / 4G public land mobile networks and some satellite mobile networks.\n", 
"osVersion": "The version of the host operating system device.", 
"refDeviceModel": "Reference to an entity of type DeviceModel.", 
"rssi": "Received signal strength indicator for a wireless enabled device. It must be equal to `1.0` when the signal\nstrength is maximum. `0.0` when signal is missing. `-1.0` when it cannot be determined.\n", 
"softwareVersion": "The software version of this device.", 
"supportedProtocol": "", 
"value": "A observed or reported value. For actuator devices, it is an attribute that allows a controlling application to \nchange the actuation setting. For instance, a switch device which is currently _on_ can report a value `"on"` of type Text. \nObviously, in order to toggle the referred switch, this attribute value will have to be changed to `"off"`\n", 
"deviceClass": "Class of constrained device as specified by RFC 7228. If the\ndevice is not a constrained device this property shall not be present.\n", 
"documentation": "A link to device documentation.", 
"energyLimitationClass": "\nDevice class of energy limitation as per [RFC 7228](https://tools.ietf.org/html/rfc7228#section-3").\n\n-   `E0` - Event energy-limited \n-   `E1` - Period energy-limited \n-   `E2` - Lifetime energy-limited \n-   `E9` - No direct quantitative limitations to available energy\n", 
"function": "The functionality necessary to accomplish the task for which a\nDevice is designed. A device can be designed to perform more than one\nfunction. Defined by [SAREF](https://w3id.org/saref#Function).\n", 
"supportedUnits": "Units of measurement supported by the device. Allowed values The unit code (text) of measurement given using the\n[UN/CEFACT Common Code](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes)\n(max. 3 characters).\n", 
"circuit": " The circuit to which this streetlight connects to and gets power from. Typically it will contain an identifier that will allow to obtain more information about such circuit.", 
"controllingMethod": "The method used to control this streetlight.", 
"dateLastLampChange": "Timestamp of the last change of lamp made.", 
"dateLastSwitchingOff": "Timestamp of the last switching off.", 
"dateLastSwitchingOn": "Timestamp of the last switching on.", 
"illuminanceLevel": "Relative illuminance level setting.", 
"laternHeight": "", 
"locationCategory": "Category of the location where the streetlight is placed.", 
"powerState": " Streetlights power state.", 
"activePowerR": "Active power consumed in R phase", 
"activePowerS": "Active power consumed in S phase.", 
"activePowerT": "Active power consumed in T phase.", 
"cosPhi": "Cosin of phi" parameter.", 
"cupboardMadeOf": " Material the cabinet cupboard is made of.", 
"dateLastProgramming": " Date at which there was a programming operation over the cabinet.", 
"dateMeteringStarted": "The starting date for metering energy consumed.", 
"energyConsumed": "Energy consumed by the circuits controlled since metering started (since dateMeteringStarted).", 
"energyCost": "Cost of the energy consumed by the circuits controlled since the metering start date (dateMeteringStarted).", 
"frequency": " The working frequency of the circuit.", 
"intensityR": "Electric intensity in R phase.", 
"intensityS": "Electric intensity in S phase.", 
"intensityT": "Electric intensity in T phase.", 
"lastMeterReading": "Value of the last reading obtained from the energy consumed metering system.", 
"maximumPowerAvailable": "The maximum power available (by contract) for the circuits controlled by this cabinet.", 
"meterReadingPeriod": " The periodicity of energy consumed meter readings in days.", 
"powerFactorR": " Power factor for phase R.", 
"powerFactorS": "Power factor for phase S.", 
"powerFactorT": "Power factor for phase T.", 
"reactiveEnergyConsumed": "Energy consumed (with regards to reactive power) by circuits since the metering start date (dateMeteringStarted).", 
"reactivePowerR": "Reactive power in R phase.", 
"reactivePowerS": "Reactive power in S phase.", 
"reactivePowerT": "Reactive power in T phase.", 
"refStreetlightGroup": "Streetlight group(s) controlled.", 
"thdrIntensityR": "Total harmonic distortion (R) of intensity in phase R.", 
"thdrIntensityS": "Total harmonic distortion (S) of intensity in phase S.", 
"thdrIntensityT": " Total harmonic distortion (T) of intensity in phase T.", 
"thdrVoltageR": ": Total harmonic distortion (R) of intensity in phase R.", 
"thdrVoltageS": " Total harmonic distortion (S) of voltage in phase S.", 
"thdrVoltageT": "Total harmonic distortion (T) of voltage in phase T.", 
"totalActivePower": "Active power currently consumed (counting all phases).", 
"totalReactivePower": "Reactive power currently consumed (counting all phases).", 
"voltageR": "Electric tension in phase R.", 
"voltageS": "Electric tension in phase S.", 
"voltageT": "Electric tension in phase T.", 
"workingMode": "Working mode for this cabinet controller.", 
"activeProgramId": "Identifier of the active program for this streetlight group.", 
"refStreetlight": "", 
"switchingMode": "Switching mode.", 
"switchingOnHours": "Switching on hours. It is used normally to set special schedules for certain dates.", 
"colorRenderingIndex": " Color rendering index of the lamp.", 
"colorTemperature": "Correlated color temperature of the lamp.", 
"columnBrandName": " Name of the column brand.", 
"columnColor": "Column painting color.", 
"columnMadeOf": "Material column is made of.", 
"columnManufacturerName": "Name of the column manufacturer.", 
"columnModelName": " Name of the column model.", 
"lampBrandName": "Name of the lamps brand.", 
"lampManufacturerName": " Name of the lamps manufacturer.", 
"lampModelName": " Name of the lamps model.", 
"lampTechnology": "Technology used by the lamp.", 
"lampWeight": "Lamps weight.", 
"lanternBrandName": "Name of the lanterns brand.", 
"lanternManufacturerName": "Name of the lanterns manufacturer.", 
"lanternModelName": "Name of the lanterns model.", 
"lanternWeight": " Lanterns weight.", 
"luminousFlux": "Maximum light output which can be provided by the lamp.", 
"maxPowerConsumption": "Maximum power consumption supported by the lantern.", 
"minPowerConsumption": "Minimum power consumption supported by the lantern.", 
"powerConsumption": "(Nominal) power consumption made by the lamp.", 
"workingLife": "The estimated number of hours working (the lamp) without failure.", 
"activeEnergyExport": "Active energy exported per phase since the metering start date. The actual values will be conveyed by subproperties which names will be equal to the name of each of the alternating current phases: L1, L2, L3.", 
"activeEnergyImport": "Active energy imported i.e. consumed per phase since the metering start date. The actual values will be conveyed by subproperties which names will be equal to the name of each of the alternating current phases: L1, L2, L3.", 
"activePower": "Active power consumed per phase. The actual values will be conveyed by subproperties which names will be equal to the name of each of the alternating current phases: L1, L2, L3.", 
"apparentEnergyExport": "Apparent energy exported per phase since the metering start date. The actual values will be conveyed by subproperties which names will be equal to the name of each of the alternating current phases: L1, L2, L3.", 
"apparentEnergyImport": " Apparent energy imported i.e. consumed per phase since the metering start date. The actual values will be conveyed by subproperties which names will be equal to the name of each of the alternating current phases: L1, L2, L3.", 
"apparentPower": "Apparent power consumed per phase. The actual values will be conveyed by subproperties which names will be equal to the name of each of the alternating current phases: L1, L2, L3.", 
"current": "Electrical current. The actual values will be conveyed by one subproperty per alternating current phase and the neutral wire: L1, L2, L3 and N.", 
"dateEnergyMeteringStarted": "The starting date for metering energy.", 
"displacementPowerFactor": " Displacement power factor for each phase. The quantity is based on the fundamental frequency of the system. The actual values will be conveyed by one subproperty per alternating current phase: L1, L2 and L3", 
"phaseToPhaseVoltage": "Voltage between phases. A value for each phase pair: phases 1 and 2 (L12), phases 2 and 3 (L32), phases 3 and 1 (L31).", 
"phaseVoltage": "The voltage between each phase and neutral conductor. The actual values will be conveyed by one subproperty per alternating current phase: L1, L2 and L3", 
"powerFactor": "Power factor for each phase. The actual values will be conveyed by one subproperty per alternating current phase: L1, L2 and L3", 
"reactiveEnergyExport": "Fundamental frequency reactive energy exported per phase since the metering start date. The actual values will be conveyed by subproperties which names will be equal to the name of each of the alternating current phases: L1, L2, L3.", 
"reactiveEnergyImport": "Fundamental frequency reactive energy imported i.e. consumed per phase since the metering start date. The actual values will be conveyed by subproperties which names will be equal to the name of each of the alternating current phases: L1, L2, L3.", 
"reactivePower": " Fundamental frequency reactive power. The actual values will be conveyed by subproperties whose names will be equal to the name of each of the alternating current phases: L1, L2, L3.", 
"refTargetDevice": " Device(s) for which the measurement was taken.", 
"thdCurrent": "Total harmonic distortion of electrical current. The actual values will be conveyed by one subproperty per alternating current phase: L1, L2 and L3", 
"thdVoltage": "Total harmonic distortion of voltage for each phase. The actual values will be conveyed by one subproperty per alternating current phase: L1, L2 and L3", 
"totalActiveEnergyExport": "Total energy exported since metering started (since dateEnergyMeteringStarted).", 
"totalActiveEnergyImport": "Total energy imported i.e. consumed since metering started (since dateEnergyMeteringStarted).", 
"totalApparentEnergyExport": "Total energy exported (with regards to apparent power) since the metering start date (dateEnergyMeteringStarted).", 
"totalApparentEnergyImport": "Total energy imported i.e. consumed (with regards to apparent power) since the metering start date (dateEnergyMeteringStarted).", 
"totalApparentPower": "Apparent power consumed (counting all phases).", 
"totalDisplacementPowerFactor": "Displacement power factor including all phases. The quantity is based on the fundamental frequency of the system", 
"totalPowerFactor": " Power factor including all phases.", 
"totalReactiveEnergyExport": "Total fundamental frequency reactive energy exported since metering started (since dateEnergyMeteringStarted).", 
"totalReactiveEnergyImport": "Total energy imported i.e. consumed (with regards to fundamental frequency reactive power) since the metering start date (dateEnergyMeteringStarted).", 
"containedInPlace": "The enclosing area the Building lies within", 
"floorsAboveGround": "Number of floors above ground within the building", 
"floorsBelowGround": "Number of floors below ground within the building", 
"occupier": "Link to the occupiers of the building", 
"refMap": "The URL holding a map of the building", 
"dateFinished": "The actual end date for the operation", 
"dateStarted": "The actual start date for the operation.", 
"operationSequence": "", 
"refRelatedBuildingOperation": "", 
"refRelatedDeviceOperation": "", 
"allergenRisk": "", 
"airQualityIndex": "Air quality index corresponding to the air quality observed.", 
"airQualityLevel": "Overall qualitative level of health concern corresponding to the air quality observed.", 
"as": "Arsenic", 
"c6h6": "Benzene", 
"cd": "Cadmium", 
"co": "Carbon Monoxide", 
"ni": "Nickel", 
"no": "Nitrogen monoxide", 
"no2": "Nitrogen dioxide", 
"o3": "ozone", 
"pb": "Lead", 
"pm10": "Particulate matter 10 micrometers or less in diameter", 
"pm25": "Particulate matter 2.5 micrometers or less in diameter", 
"reliability": "Reliability (percentage, expressed in parts per one) corresponding to the air quality observed.", 
"sh2": "Hydrogen sulfide", 
"so2": "Sulfur dioxide", 
"volatileOrganicCompoundsTotal": "Alkanes <C10, ketones <C6, aldehydes <C10, carboxylic acids <C5,\naspirits<C7, Alkenes <C8, Aromatics\n", 
"typeOfLocation": "about the location is outdoor or indoor", 
"sonometerClass": "Class of sonometer (0, 1, 2) according to ANSI used for taking this observation. This attribute is useful when no device entity is associated to observations. It allows to convey, roughly, information about the precision of the measurements.", 
"flow": " Water Flow observed.", 
"measuredArea": "Reference of the surface measured", 
"objectArea": "Percentage occupied by floating object in the area", 
"objectHeightAverage": "Average height raised", 
"objectHeightMax": "Average height raised.", 
"objectVolume": "Estimated volume raised", 
"swellDirection": "Swells Direction.", 
"swellHeight": "Swell height observed.", 
"swellPeriod": "Swells period", 
"waveLength": "Wave Length.", 
"Chla": "Concentration of chlorophyll A.", 
"Cl-": "Concentration of chlorides.", 
"NH3": " Concentration of ammonia.", 
"NH4": " Concentration of ammonium.", 
"NO3": "Concentration of nitrates.", 
"O2": "Level of free, non-compound oxygen present.", 
"PC": "Concentration of pigment phycocyanin which can be measured to estimate cyanobacteria concentrations specifically.", 
"PE": "Concentration of pigment phycoerythrin which can be measured to estimate cyanobacteria concentrations specifically.", 
"conductance": "Specific Conductance.", 
"conductivity": "Electrical Conductivity.", 
"measurand": "An array of strings containing details (see format below) about extra measurands provided by this observation", 
"orp": "Oxidation-Reduction potential.", 
"pH": "Acidity or basicity of an aqueous solution.", 
"salinity": "Amount of salts dissolved in water.", 
"tds": " Total dissolved solids.", 
"tss": "Total suspended solids.", 
"turbidity": "Amount of light scattered by particles in the water column.", 
"generationSources": "A list of sources used for power generation.", 
"maxBiomassMeasure": "Geolocation of the green energy generator site represented by a GeoJSON (Multi)Polygon or Point.", 
"maxEolicPowerMeasure": "", 
"maxHydroPowerMeasure": "", 
"maxSolarPowerMeasure": "", 
"redistribution": "Indicates whether the generated energy will be dumped into the network.", 
"selfConsumption": "Indicate whether energy generated will use for self.", 
"biomassPowerGenerated": "Specifies the amount of power generated using biomass energy", 
"eolicPowerGenerated": "Specifies the amount of power generated using eolic energy", 
"geothermalPowerGenerated": "Specifies the amount of power generated using geothermal energy", 
"hydroPowerGenerated": "Specifies the amount of power generated using hydropower energy", 
"solarPowerGenerated": "Specifies the amount of power generated using solar energy", 
"acPowerInput": "A measurement at input present only present if the battery work with AC. This is like the consumption measurement for the battery.", 
"acPowerOutput": "A measurement present only if battery gives output in AC", 
"autonomyTime": "time duration expressed in 8601 duration until drain battery.", 
"cicleLife": "A number of reference of discharge-charge cycles until the battery decrease its performance", 
"dcPowerInput": "A measurement at input present only present if the battery work with DC. This is like the consumption measurement for the battery.", 
"dcPowerOutput": "A measurement present only if battery gives output in DC", 
"rechargeTime": "Time duration expressed in 8601 duration until re fill 100 the battery.", 
"refBattery": "A Reference to an an entity or list of entities of type Battery", 
"statusPercent": "A measure in percentage of the remaining energy stored in the battery. Allowed values: Any positive integer between 0 number and 100."}}